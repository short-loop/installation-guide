apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.shortLoopUI.appName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.shortLoopUI.appName }}
    namespace: {{ .Release.Namespace }}
    release: {{ .Release.Name }}
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: {{ default "50%" .Values.maxSurge }}
      maxUnavailable: {{ default "30%" .Values.maxUnavailable }}
    type: RollingUpdate
  replicas: {{ default "1" .Values.shortLoopUI.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.shortLoopUI.appName }}
      namespace: {{ .Release.Namespace }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ .Values.shortLoopUI.appName }}
        namespace: {{ .Release.Namespace }}
        rollover: {{ default "false" .Values.rollover | quote }}
    spec:
      volumes:
        - name: applogs
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.shortLoopUI.image.repository }}:{{ .Values.shortLoopUI.image.tag }}"
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - "{{ default "echo Done" .Values.preStopCommand}} && sleep {{ default 120 .Values.drainTime }}"
          imagePullPolicy: {{ .Values.shortLoopUI.image.pullPolicy }}
          terminationMessagePath: "/logs/app-name/termination.log"
          terminationMessagePolicy: "FallbackToLogsOnError"
          env:
            - name: REACT_APP_POSTHOG_API_KEY
              value: {{ .Values.shortLoopControlTower.dbHost }}
            - name: REACT_APP_POSTHOG_API_HOST
              value: {{ .Values.shortLoopControlTower.dbPort }}
            - name: ORG_NAME
              value: {{ .Values.shortLoopControlTower.dbName }}
          ports:
            - containerPort: {{ .Values.shortLoopUI.exposePort }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.shortLoopUI.exposePort }}
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.shortLoopUI.exposePort }}
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
{{ toYaml .Values.shortLoopUI.resources | indent 12}}
