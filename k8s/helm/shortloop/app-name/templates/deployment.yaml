apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "name" . }}
    namespace: {{ .Release.Namespace }}
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: {{ default "50%" .Values.maxSurge }}
      maxUnavailable: {{ default "30%" .Values.maxUnavailable }}
    type: RollingUpdate
  replicas: {{ default "1" .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      namespace: {{ .Release.Namespace }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "name" . }}
        namespace: {{ .Release.Namespace }}
        rollover: {{ default "false" .Values.rollover | quote }}
    spec:
      volumes:
        - name: applogs
          emptyDir: {}
      {{- range $p := .Values.secretFiles }}
        - name: {{ .name }}
          secret:
            secretName: {{ template "name" $ }}-{{ .name }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        lifecycle:                   
          preStop:                   
            exec:                    
              command:               
              - sh
              - -c
              - "{{ default "echo Done" .Values.preStopCommand}} && sleep {{ default 120 .Values.drainTime }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        terminationMessagePath: "/logs/app-name/termination.log"
        terminationMessagePolicy: "FallbackToLogsOnError"
        ports:
        - containerPort: {{ .Values.servicePort }}
        livenessProbe:
          httpGet:
            path: {{ default "/status" .Values.probePath }}
            port: {{ .Values.probePort }}
          initialDelaySeconds: {{ default "30" .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default "20" .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ default "1" .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ default "1" .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ default "/status" .Values.probePath }}
            port: {{ .Values.probePort }}
          initialDelaySeconds: {{ default "30" .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default "15" .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ default "1"  .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ default "1" .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ default "300" .Values.terminationGracePeriodSeconds }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
